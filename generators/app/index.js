/* jshint node: true */
'use strict';
/*
 * This generator sets up the skeleton for a homework assignment
 * written in latex.  Each question is placed in an individual
 * file in "questions/".  The document is generated by the Make
 * utility.
 */
var Generator = require('yeoman-generator');

module.exports = class extends Generator {
    constructor(args, opts) {
        super(args, opts);

        // Create the .yo-rc.json file
        this.config.save();
        this.argument('homework', {
            type: Number,
            required: false,
            desc: 'The number of the homework assignment (e.g. 1, 2, etc.)'
        });
        this.argument('questions', {
            type: Number,
            required: false,
            desc: 'The number of questions in the homework assignment.'
        });
        this.argument('author', {
            type: String,
            required: false,
            desc: 'The author name to display on the paper.',
            store: true
        });
    }

    _ask_for_int(name, message, adefault) {
        if (this.options[name])
            return;
        return this.prompt([{
            type: 'input',
            name: name,
            message: message,
            default: adefault
        }]).then((answer) => {
            if ((typeof answer[name]) === 'number')
                this.options[name] = answer[name];
            else if ((typeof answer[name]) === 'string')
                this.options[name] = parseInt(answer[name]);
        });
    }

    getHomeworkNumber() {
        return this._ask_for_int(
            'homework',
            'Which homework is this? (Integer)',
            1);
    }

    getQuestionNumber() {
        return this._ask_for_int(
            'questions',
            'How many questions are there?',
            5);
    }

    getAuthorName() {
        if (this.options.author)
            return;
        return this.prompt([{
            type: 'input',
            name: 'author',
            message: 'What is your name?',
            store: true
        }]).then((answer) => {
            this.options.author = answer.author;
        });
    }


    writing() {
        var opts = {
            'homework': this.options.homework,
            'questions': this.options.questions,
            'author': this.options.author
        };
        this.log(opts);
        var sub = 'hw' + this.options.homework + '/';

        this.fs.copyTpl(
            this.templatePath('Makefile.ejs'),
            this.destinationPath(sub + 'Makefile'),
            opts
            );
        this.fs.copyTpl(
            this.templatePath('hw.ejs'),
            this.destinationPath(sub + 'hw' + this.options.homework + '.tex'),
            opts
            );
        for (let i = 1; i <= this.options.questions; i++) {
            this.fs.write(
                this.destinationPath(sub + 'questions/question_' + i + '.tex'),
                ''
                );
        }
    }
};
